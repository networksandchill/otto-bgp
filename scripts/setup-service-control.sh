#!/bin/bash

# Setup script for Otto BGP WebUI service control permissions
# This script configures sudo permissions for the WebUI to control systemd services

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}Otto BGP WebUI Service Control Setup${NC}"
echo "====================================="
echo ""

# Check if running as root
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}This script must be run as root (use sudo)${NC}"
   exit 1
fi

# Detect the service user
SERVICE_USER="${OTTO_SERVICE_USER:-otto-bgp}"

# Check if user exists
if ! id "$SERVICE_USER" &>/dev/null; then
    echo -e "${YELLOW}Warning: User $SERVICE_USER does not exist${NC}"
    echo "Creating service user..."
    useradd -r -s /bin/false -M -d /nonexistent -c "Otto BGP Service User" $SERVICE_USER || true
fi

echo "Configuring sudo permissions for user: $SERVICE_USER"

# Create sudoers file
SUDOERS_FILE="/etc/sudoers.d/otto-bgp-webui"
TEMP_FILE="/tmp/otto-bgp-webui-sudoers.$$"

cat > "$TEMP_FILE" << EOF
# Otto BGP WebUI service control permissions
# Allows WebUI to control systemd services without password
# Generated by setup-service-control.sh

# Main services
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl start otto-bgp.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl stop otto-bgp.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl restart otto-bgp.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl reload otto-bgp.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl status otto-bgp.service

# Autonomous service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl start otto-bgp-autonomous.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl stop otto-bgp-autonomous.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl restart otto-bgp-autonomous.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl status otto-bgp-autonomous.service

# WebUI service (for self-restart after config changes)
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl start otto-bgp-webui-adapter.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl stop otto-bgp-webui-adapter.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl restart otto-bgp-webui-adapter.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl reload otto-bgp-webui-adapter.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl status otto-bgp-webui-adapter.service

# RPKI update service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl start otto-bgp-rpki-update.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl stop otto-bgp-rpki-update.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl restart otto-bgp-rpki-update.service
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl status otto-bgp-rpki-update.service

# Timer services
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl start otto-bgp.timer
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl stop otto-bgp.timer
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl restart otto-bgp.timer
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl status otto-bgp.timer

$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl start otto-bgp-rpki-update.timer
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl stop otto-bgp-rpki-update.timer
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl restart otto-bgp-rpki-update.timer
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl status otto-bgp-rpki-update.timer

# Allow daemon-reload for applying changes
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/systemctl daemon-reload

# Allow journalctl for reading logs
$SERVICE_USER ALL=(root) NOPASSWD: /usr/bin/journalctl
EOF

# Validate sudoers syntax
echo "Validating sudoers configuration..."
if visudo -c -f "$TEMP_FILE" >/dev/null 2>&1; then
    echo -e "${GREEN}✓ Sudoers syntax is valid${NC}"
    
    # Install the sudoers file
    mv "$TEMP_FILE" "$SUDOERS_FILE"
    chmod 440 "$SUDOERS_FILE"
    
    echo -e "${GREEN}✓ Sudoers file installed at $SUDOERS_FILE${NC}"
else
    echo -e "${RED}✗ Sudoers syntax validation failed${NC}"
    echo "Debug output:"
    visudo -c -f "$TEMP_FILE"
    rm -f "$TEMP_FILE"
    exit 1
fi

# Update systemd service if needed
SYSTEMD_SERVICE="/etc/systemd/system/otto-bgp-webui-adapter.service"
if [[ -f "$SYSTEMD_SERVICE" ]]; then
    echo ""
    echo "Checking systemd service configuration..."
    
    # Check if environment variable is set
    if ! grep -q "OTTO_WEBUI_ENABLE_SERVICE_CONTROL=true" "$SYSTEMD_SERVICE"; then
        echo -e "${YELLOW}Adding service control environment variable to systemd service${NC}"
        
        # Create override directory
        OVERRIDE_DIR="/etc/systemd/system/otto-bgp-webui-adapter.service.d"
        mkdir -p "$OVERRIDE_DIR"
        
        # Create override file
        cat > "$OVERRIDE_DIR/10-service-control.conf" << EOF
[Service]
Environment="OTTO_WEBUI_ENABLE_SERVICE_CONTROL=true"
EOF
        
        echo -e "${GREEN}✓ Service override created${NC}"
        
        # Reload systemd
        systemctl daemon-reload
        
        # Restart service if running
        if systemctl is-active --quiet otto-bgp-webui-adapter.service; then
            echo "Restarting WebUI service to apply changes..."
            systemctl restart otto-bgp-webui-adapter.service
            echo -e "${GREEN}✓ WebUI service restarted${NC}"
        fi
    else
        echo -e "${GREEN}✓ Service control already enabled in systemd service${NC}"
    fi
fi

# Test sudo permissions
echo ""
echo "Testing sudo permissions..."
if sudo -u "$SERVICE_USER" -n systemctl status otto-bgp.service >/dev/null 2>&1; then
    echo -e "${GREEN}✓ Sudo permissions are working${NC}"
else
    echo -e "${YELLOW}⚠ Could not verify sudo permissions (service might not exist yet)${NC}"
fi

echo ""
echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}Service control setup complete!${NC}"
echo -e "${GREEN}========================================${NC}"
echo ""
echo "The WebUI can now control the following services:"
echo "  • otto-bgp.service"
echo "  • otto-bgp-autonomous.service"
echo "  • otto-bgp-webui-adapter.service"
echo "  • otto-bgp-rpki-update.service"
echo "  • otto-bgp.timer"
echo "  • otto-bgp-rpki-update.timer"
echo ""
echo "If the WebUI is running, it should now be able to control services."